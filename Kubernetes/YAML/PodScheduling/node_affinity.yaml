# Here's the YAML with a node affinity rule to ensure pods run on nodes labeled with disk=ssd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: web-1
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: disk
                    operator: In
                    values:
                      - ssd
      containers:
        - image: docker.io/nginx:1.14
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
      terminationGracePeriodSeconds: 120
---

# Here's the YAML with a node affinity rule to check for any value of the disk label:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: web-2
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: disk
                    operator: Exists
      containers:
        - image: docker.io/nginx:1.14
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
      terminationGracePeriodSeconds: 120
---

# Here's the YAML with a node affinity rule to ensure pods run on all nodes except those labeled with disk=ssd:
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: nginx-web
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: disk
                    operator: NotIn
                    values:
                      - ssd
      containers:
        - image: nginx:1.14
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
      terminationGracePeriodSeconds: 120

